/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a packagekitadaptor -i PkInterface.h -l PkInterface /home/dylan/canonical/apper/PkSession/org.freedesktop.PackageKit.xml
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "packagekitadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ModifyAdaptor
 */

ModifyAdaptor::ModifyAdaptor(PkInterface *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ModifyAdaptor::~ModifyAdaptor()
{
    // destructor
}

void ModifyAdaptor::InstallCatalogs(uint xid, const QStringList &files, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallCatalogs
    parent()->InstallCatalogs(xid, files, interaction);
}

void ModifyAdaptor::InstallFontconfigResources(uint xid, const QStringList &resources, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallFontconfigResources
    parent()->InstallFontconfigResources(xid, resources, interaction);
}

void ModifyAdaptor::InstallGStreamerResources(uint xid, const QStringList &resources, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallGStreamerResources
    parent()->InstallGStreamerResources(xid, resources, interaction);
}

void ModifyAdaptor::InstallMimeTypes(uint xid, const QStringList &mime_types, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallMimeTypes
    parent()->InstallMimeTypes(xid, mime_types, interaction);
}

void ModifyAdaptor::InstallPackageFiles(uint xid, const QStringList &files, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallPackageFiles
    parent()->InstallPackageFiles(xid, files, interaction);
}

void ModifyAdaptor::InstallPackageNames(uint xid, const QStringList &packages, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallPackageNames
    parent()->InstallPackageNames(xid, packages, interaction);
}

void ModifyAdaptor::InstallPrinterDrivers(uint xid, const QStringList &resources, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallPrinterDrivers
    parent()->InstallPrinterDrivers(xid, resources, interaction);
}

void ModifyAdaptor::InstallProvideFiles(uint xid, const QStringList &files, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallProvideFiles
    parent()->InstallProvideFiles(xid, files, interaction);
}

void ModifyAdaptor::InstallResources(uint xid, const QString &type, const QStringList &resources, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.InstallResources
    parent()->InstallResources(xid, type, resources, interaction);
}

void ModifyAdaptor::RemovePackageByFiles(uint xid, const QStringList &files, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Modify.RemovePackageByFiles
    parent()->RemovePackageByFiles(xid, files, interaction);
}

/*
 * Implementation of adaptor class QueryAdaptor
 */

QueryAdaptor::QueryAdaptor(PkInterface *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

QueryAdaptor::~QueryAdaptor()
{
    // destructor
}

bool QueryAdaptor::IsInstalled(const QString &package_name, const QString &interaction)
{
    // handle method call org.freedesktop.PackageKit.Query.IsInstalled
    return parent()->IsInstalled(package_name, interaction);
}

bool QueryAdaptor::SearchFile(const QString &file_name, const QString &interaction, QString &package_name)
{
    // handle method call org.freedesktop.PackageKit.Query.SearchFile
    return parent()->SearchFile(file_name, interaction, package_name);
}


#include "packagekitadaptor.moc"
